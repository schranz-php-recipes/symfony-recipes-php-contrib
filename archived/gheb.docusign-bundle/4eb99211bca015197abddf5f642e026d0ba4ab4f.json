{
    "manifests": {
        "gheb/docusign-bundle": {
            "manifest": {
                "bundles": {
                    "\\DocusignBundle\\DocusignBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/"
                },
                "env": {
                    "DOCUSIGN_PRIVATE_KEY_PATH": "%kernel.project_dir%/%CONFIG_DIR%/jwt/docusign.pem",
                    "DOCUSIGN_INTEGRATION_KEY": "UUID-DOCUSIGN-INTEGRATION-KEY",
                    "DOCUSIGN_USER_GUID": "UUID-DOCUSIGN-USER-GUID",
                    "DOCUSIGN_ACCOUNT_ID": "1234567"
                },
                "gitignore": [
                    "/%CONFIG_DIR%/jwt/*.pem"
                ],
                "post-install-output": [
                    "  * <fg=blue>Read</> the documentation at:",
                    "    <comment>https://github.com/GregoireHebert/docusign-bundle</>",
                    "  * <fg=blue>Edit</> the <comment>.env</> file to adapt the authentication settings.",
                    "  * <fg=blue>Edit</> the <comment>config/packages/docusign.yaml</> file to configure your documents signatures."
                ]
            },
            "files": {
                "config/packages/docusign.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;",
                        "",
                        "return static function (ContainerConfigurator $containerConfigurator): void {",
                        "    $containerConfigurator->extension('docusign', [",
                        "        'demo' => '%kernel.debug%',",
                        "        'mode' => 'embedded',",
                        "        'auth_jwt' => [",
                        "            'private_key' => '%env(resolve:DOCUSIGN_PRIVATE_KEY_PATH)%',",
                        "            'integration_key' => '%env(DOCUSIGN_INTEGRATION_KEY)%',",
                        "            'user_guid' => '%env(DOCUSIGN_USER_GUID)%',",
                        "        ],",
                        "        'account_id' => '%env(int:DOCUSIGN_ACCOUNT_ID)%',",
                        "        'default_signer_name' => 'Gr\u00e9goire H\u00e9bert',",
                        "        'default_signer_email' => 'gregoire@les-tilleuls.coop',",
                        "        'api_uri' => 'https://www.docusign.net/restapi',",
                        "        'callback' => 'docusign_callback',",
                        "        'sign_path' => '/my/embedded/sign/path',",
                        "        'signatures' => [",
                        "            [",
                        "                'page' => 1,",
                        "                'x_position' => 200,",
                        "                'y_position' => 400,",
                        "            ],",
                        "        ],",
                        "        'storage' => [",
                        "            'adapter' => 'local',",
                        "            'options' => [",
                        "                'directory' => '%kernel.project_dir%/var/storage/default',",
                        "            ],",
                        "        ],",
                        "    ]);",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/docusign.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\Routing\\Loader\\Configurator\\RoutingConfigurator;",
                        "",
                        "return static function (RoutingConfigurator $routingConfigurator): void {",
                        "    $routingConfigurator->import('.', 'docusign');",
                        "};",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "4eb99211bca015197abddf5f642e026d0ba4ab4f"
        }
    }
}
