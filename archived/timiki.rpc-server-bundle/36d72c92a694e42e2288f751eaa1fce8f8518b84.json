{
    "manifests": {
        "timiki/rpc-server-bundle": {
            "manifest": {
                "bundles": {
                    "Timiki\\Bundle\\RpcServerBundle\\RpcServerBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/",
                    "src/": "%SRC_DIR%/"
                }
            },
            "files": {
                "config/packages/rpc_server.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;",
                        "",
                        "return static function (ContainerConfigurator $containerConfigurator): void {",
                        "    $containerConfigurator->extension('rpc_server', [",
                        "        'mapping' => '%kernel.root_dir%/Method',",
                        "        'cache' => null,",
                        "        'serializer' => 'rpc.server.serializer.base',",
                        "    ]);",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/rpc_server.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\Routing\\Loader\\Configurator\\RoutingConfigurator;",
                        "",
                        "return static function (RoutingConfigurator $routingConfigurator): void {",
                        "    $routingConfigurator->add('rpc', '/rpc')",
                        "        ->controller('RpcServerBundle:Rpc:handler')",
                        "        ->methods([",
                        "            'POST',",
                        "        ]);",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "src/Method/.gitignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "36d72c92a694e42e2288f751eaa1fce8f8518b84"
        }
    }
}
