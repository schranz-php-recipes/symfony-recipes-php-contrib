{
    "manifests": {
        "prooph/pdo-event-store": {
            "manifest": {
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/"
                },
                "copy-from-package": {
                    "scripts/": "%CONFIG_DIR%/scripts/"
                },
                "env": {
                    "MYSQL_DSN": "mysql:host=127.0.0.1;dbname=event_streams",
                    "MYSQL_USER": "user",
                    "MYSQL_PASSWORD": "password"
                },
                "post-install-output": [
                    "  * Modify your MYSQL_* configuration in <fg=green>.env</>",
                    "",
                    "  * Create event streams and projections tables using SQL scripts",
                    "    in <comment>%CONFIG_DIR%/scripts/*</comment>"
                ]
            },
            "files": {
                "config/packages/prooph_pdo_event_store.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;",
                        "use function Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\service;",
                        "",
                        "return static function (ContainerConfigurator $containerConfigurator): void {",
                        "    $services = $containerConfigurator->services();",
                        "",
                        "    $services->defaults();",
                        "",
                        "    $services->alias('Prooph\\EventStore\\EventStore', 'app.event_store.default');",
                        "",
                        "    $services->set('app.event_store.default', 'Prooph\\EventStore\\Pdo\\MySqlEventStore')",
                        "        ->args([",
                        "            service('prooph_event_store.message_factory'),",
                        "            service('app.event_store.pdo_connection.mysql'),",
                        "            service('app.event_store.mysql.persistence_strategy'),",
                        "        ]);",
                        "",
                        "    $services->set('app.event_store.pdo_connection.mysql', PDO::class)",
                        "        ->args([",
                        "            '%env(MYSQL_DSN)%',",
                        "            '%env(MYSQL_USER)%',",
                        "            '%env(MYSQL_PASSWORD)%',",
                        "        ]);",
                        "",
                        "    $services->set('app.event_store.mysql.persistence_strategy', 'Prooph\\EventStore\\Pdo\\PersistenceStrategy\\MySqlSingleStreamStrategy');",
                        "};",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "b9658984475188c7d5e943229c81973539b374b2"
        }
    }
}
