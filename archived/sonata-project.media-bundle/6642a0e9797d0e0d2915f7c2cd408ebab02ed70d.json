{
    "manifests": {
        "sonata-project/media-bundle": {
            "manifest": {
                "bundles": {
                    "Sonata\\MediaBundle\\SonataMediaBundle": [
                        "all"
                    ]
                },
                "copy-from-recipe": {
                    "config/": "%CONFIG_DIR%/",
                    "public/": "%PUBLIC_DIR%/"
                }
            },
            "files": {
                "config/packages/sonata_media.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\DependencyInjection\\Loader\\Configurator\\ContainerConfigurator;",
                        "",
                        "return static function (ContainerConfigurator $containerConfigurator): void {",
                        "    $containerConfigurator->extension('sonata_media', [",
                        "        'default_context' => 'default',",
                        "        'contexts' => [",
                        "            'default' => [",
                        "                'providers' => [",
                        "                    'sonata.media.provider.dailymotion',",
                        "                    'sonata.media.provider.youtube',",
                        "                    'sonata.media.provider.image',",
                        "                    'sonata.media.provider.file',",
                        "                    'sonata.media.provider.vimeo',",
                        "                ],",
                        "                'formats' => [",
                        "                    'small' => [",
                        "                        'width' => 100,",
                        "                        'quality' => 70,",
                        "                    ],",
                        "                    'big' => [",
                        "                        'width' => 500,",
                        "                        'quality' => 70,",
                        "                    ],",
                        "                ],",
                        "            ],",
                        "        ],",
                        "        'cdn' => [",
                        "            'server' => [",
                        "                'path' => '/upload/media',",
                        "            ],",
                        "        ],",
                        "        'filesystem' => [",
                        "            'local' => [",
                        "                'directory' => '%kernel.project_dir%/public/upload/media',",
                        "                'create' => false,",
                        "            ],",
                        "        ],",
                        "    ]);",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "config/routes/sonata_media.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use Symfony\\Component\\Routing\\Loader\\Configurator\\RoutingConfigurator;",
                        "",
                        "return static function (RoutingConfigurator $routingConfigurator): void {",
                        "    $routingConfigurator->import('@SonataMediaBundle/Resources/config/routing/gallery.xml')",
                        "        ->prefix('/media/gallery');",
                        "",
                        "    $routingConfigurator->import('@SonataMediaBundle/Resources/config/routing/media.xml')",
                        "        ->prefix('/media');",
                        "};",
                        ""
                    ],
                    "executable": false
                },
                "public/upload/media/.gitignore": {
                    "contents": [
                        "*",
                        "!.gitignore",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "6642a0e9797d0e0d2915f7c2cd408ebab02ed70d"
        }
    }
}
